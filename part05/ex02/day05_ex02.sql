CREATE INDEX idx_person_name ON person (UPPER(name));

EXPLAIN ANALYZE
SELECT * 
FROM person
WHERE UPPER(name) = 'Anna';

-- psql -d day05 -U postgres -f ex02/day05_ex02.sql

-- Упражнение 02 - Формула находится в указателе. Все в порядке?

-- Please create a functional B-Tree index with name 
-- idx_person_name for the column name of the person table. 
-- Index should contain person names in upper case.

-- Please write and provide any SQL with proof (EXPLAIN ANALYZE) 
-- that index idx_person_name is working.

-- ПЕРЕВОД:

-- Пожалуйста, создайте функциональный индекс B-дерева с именем
-- idx_person_name для имени столбца таблицы person. 
-- Индекс должен содержать имена людей в верхнем регистре.

-- Пожалуйста, напишите и предоставьте любой SQL с доказательством (ОБЪЯСНИТЕ, ПРОАНАЛИЗИРУЙТЕ) 
-- этот индекс idx_person_name работает.

-- SELECT * 
-- FROM person;

-- CREATE INDEX
--                                             QUERY PLAN                                            
-- --------------------------------------------------------------------------------------------------
--  Seq Scan on person  (cost=0.00..1.14 rows=1 width=108) (actual time=0.728..0.729 rows=0 loops=1)
--    Filter: (upper((name)::text) = 'Anna'::text)
--    Rows Removed by Filter: 9
--  Planning Time: 0.312 ms
--  Execution Time: 0.744 ms
-- (5 rows)

-- Данный план запроса (query plan) представляет собой информацию о способе выполнения запроса оптимизатором базы данных. 

-- 1. Seq Scan on person - указывает на последовательное сканирование таблицы person. 
-- Это означает, что оптимизатор будет последовательно обходить все строки таблицы для выполнения запроса.

-- 2. cost=0.00..1.14 - представляет оценочную стоимость выполнения операции сканирования. 
-- В данном случае, стоимость оценивается как от 0.00 до 1.14.

-- 3. rows=1 - указывает на оценочное количество строк, которые возвращаются после выполнения операции сканирования. 
-- В данном случае, ожидается возвращение одной строки.

-- 4. width=108 - указывает на ожидаемую ширину возвращаемых строк в байтах.

-- 5. actual time=0.728..0.729 - показывает фактическое время выполнения операции сканирования в миллисекундах. 
-- Сканирование заняло между 0.728 и 0.729 миллисекунд.

-- 6. rows=0 - указывает на фактическое количество строк, выбранных после применения фильтра в результатах операции сканирования. 
-- В данном случае, ни одна строка не удовлетворяет условию (upper((name)::text) = 'Anna'::text).

-- 7. Rows Removed by Filter: 9 - показывает количество строк, удаленных с помощью фильтра после сканирования таблицы person.

-- 8. Planning Time: 0.312 ms - представляет время, затраченное оптимизатором на планирование выполняемого запроса.

-- 9. Execution Time: 0.744 ms - общее время выполнения запроса, включая время планирования.

-- Информация, предоставленная в плане запроса, полезна для анализа действий оптимизатора 
-- базы данных при выполнении запроса и может быть использована для оптимизации запросов и структуры таблицы.